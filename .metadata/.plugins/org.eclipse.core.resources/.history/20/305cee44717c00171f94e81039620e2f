package br.com.vagas.emprego.service;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Map;

import br.com.vagas.emprego.utils.IOUtils;

public class Servico {
	   private final String TAG = "Http";
	    public final int TIMEOUT_MILLIS = 15000;
	    public boolean LOG_ON = false;
	    private String contentType;
	    private String charsetToEncode;
	
	    public String doGet(String url, Map<String, String> request) throws IOException {
	        return doGet(url, request, "UTF-8");
	    }

	    public String doGet(String url) throws IOException {
	        return doGet(url, "UTF-8");
	    }  
	    
	    public String doGet(String url, String charset) throws IOException {

	        URL u = new URL(url);
	        HttpURLConnection conn = null;
	        String s = null;
	        try {
	            conn = (HttpURLConnection) u.openConnection();
	            if (contentType != null) {
	                conn.setRequestProperty("Content-Type", contentType);
	            }
	            conn.setRequestMethod("GET");
	            conn.setConnectTimeout(TIMEOUT_MILLIS);
	            conn.setReadTimeout(TIMEOUT_MILLIS);
	            conn.connect();
	            InputStream in = null;
	            int status = conn.getResponseCode();
	            if (status >= HttpURLConnection.HTTP_BAD_REQUEST) {
	                Log.d(TAG, "Error code: " + status);
	                in = conn.getErrorStream();
	            } else {
	                in = conn.getInputStream();
	            }
	            s = IOUtils.toString(in, charset);
	            if (LOG_ON) {
	                Log.d(TAG, "<< Http.doGet: " + s);
	            }
	            in.close();
	        } catch (IOException e) {
	            throw e;
	        } finally {
	            if (conn != null) {
	                conn.disconnect();
	            }
	        }

	        return s;
	    }
  
	  public String doGet(String url, Map<String, String> params, String charset) throws IOException {

	        String queryString = getQueryString(params);

	        URL u = new URL(url);
	        HttpURLConnection conn = null;
	        String s = null;
	        try {
	            conn = (HttpURLConnection) u.openConnection();
	            if (contentType != null) {
	                conn.setRequestProperty("Content-Type", contentType);
	            }
	            conn.setRequestMethod("GET");
	            conn.setConnectTimeout(TIMEOUT_MILLIS);
	            conn.setReadTimeout(TIMEOUT_MILLIS);
	            conn.setRequestProperty("CustomHeader", queryString);
	            conn.connect();
	            InputStream in = null;
	            int status = conn.getResponseCode();
	            if (status >= HttpURLConnection.HTTP_BAD_REQUEST) {
	                in = conn.getErrorStream();
	            } else {
	                in = conn.getInputStream();
	            }
	            s = IOUtils.toString(in, charset);
	           
	            in.close();
	        } catch (IOException e) {
	            throw e;
	        } finally {
	            if (conn != null) {
	                conn.disconnect();
	            }
	        }

	        return s;
	    }
	  
	  public String getQueryString(Map<String, String> params) throws IOException {
	        if (params == null || params.size() == 0) {
	            return null;
	        }
	        String urlParams = null;
	        for (String chave : params.keySet()) {
	            Object objValor = params.get(chave);
	            if (objValor != null) {
	                String valor = objValor.toString();
	                if (charsetToEncode != null) {
	                    valor = URLEncoder.encode(valor, charsetToEncode);
	                }
	                urlParams = urlParams == null ? "" : urlParams + "&";
	                urlParams += chave + "=" + valor;
	            }
	        }
	        return urlParams;

	    }
	
}
